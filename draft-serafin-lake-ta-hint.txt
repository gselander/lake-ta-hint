



Lightweight Authenticated Key Exchange                        M. Serafin
Internet-Draft                                                ASSA ABLOY
Intended status: Standards Track                             G. Selander
Expires: 13 April 2025                                          Ericsson
                                                         10 October 2024


    Trust Anchor Hints in Ephemeral Diffie-Hellman Over COSE (EDHOC)
                   draft-serafin-lake-ta-hint-latest

Abstract

   TODO Abstract

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://gselander.github.io/lake-ta-hint/draft-serafin-lake-ta-
   hint.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-serafin-lake-ta-hint/.

   Discussion of this document takes place on the Lightweight
   Authenticated Key Exchange Working Group mailing list
   (mailto:lake@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/lake/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/lake/.

   Source for this draft and an issue tracker can be found at
   https://github.com/gselander/lake-ta-hint.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 13 April 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Terminology
   2.  EAD Item
     2.1.  CDDL Specification
   3.  Processing
     3.1.  Example Scenario
   4.  Security Considerations
   5.  IANA Considerations
     5.1.  EDHOC External Authorization Data Registry
     5.2.  EDHOC Trust Anchor Hint Registry
   6.  Normative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   Ephemeral Diffie-Hellman Over COSE (EDHOC) [RFC9528] is a lightweight
   security handshake protocol with low processing and message overhead,
   especially suited for constrained devices and low-power networking.

   In addition to excuting a handshake protocol, to perform
   authentication and authorization typically involves the validation of
   certificates or assertions using Trust Anchors (TAs) established by
   other means.  For this machinery to work, an endpoint thus needs to
   use credentials issued by a TA of the other endpoint.  Moreover, the
   validation of credentials against TAs can be a significant
   contribution to processing or time to completion, for example in
   embedded devices.  Performance can be gained by providing the other
   endpoint with hints about which TAs are supported, or which TAs
   should be used to verify specific credentials.  This document
   specifies how to transport hints about TAs between EDHOC peers.

   EDHOC allows the inclusion of authorization-related information in
   the External Authorization Data (EAD) message fields, see Section 3.8
   of [RFC9528].  EAD can be included in any of the four EDHOC messages
   (EAD_1, EAD_2, EAD_3, EAD_4), providing flexibility and extensibility
   to the protocol.  Its main purpose is to embed authorization-related
   information directly into the key exchange process, reducing the need
   for additional message exchanges and simplifying the overall protocol
   flow.  Information about TAs is explicitly mentioned as one example
   of such authorization-related information, see Appendix E of
   [RFC9528].

   The primary motivation for this specification is to provide hints
   about TAs for authentication, typically related to Certificate
   Authorities (CAs), where the TA includes the public key of the CA.
   The hint is a COSE header parameter intended to facilitate the
   retrieval of the TA, for example a key identifier (kid) or a hash of
   an X.509 certificate containing the CA root public key (x5t), see
   Section 2.  However, the same scheme can be applied to hints about
   other trusted third parties, such as Verifiers of remote attestation
   evidence [RFC9334] or Time Servers for network time synchronization
   [RFC5905].  This draft defines an EDHOC EAD item containing hints
   about certain type of TAs, and enables the extension to other kind of
   hints and TAs through the registration of the appropriate IANA
   parameters.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  EAD Item

   Table 1 provides a summary of the EDHOC Trust Anchor hints defined in
   this section.

   +========================+=====+========+===============+==========+
   |Name                    |CBOR |CBOR    |Description    |Reference |
   |                        |label|type    |               |          |
   +========================+=====+========+===============+==========+
   |authentication_authority|1    |ta_hints|Trust anchor of|[RFC-XXXX]|
   |                        |     |        |authentication |          |
   |                        |     |        |credential     |          |
   +------------------------+-----+--------+---------------+----------+
   |attestation_verifier    |2    |ta_hints|Trust anchor of|[RFC-XXXX]|
   |                        |     |        |remote         |          |
   |                        |     |        |attestation    |          |
   |                        |     |        |verifier       |          |
   +------------------------+-----+--------+---------------+----------+
   |time_authority          |3    |ta_hints|Trust anchor of|[RFC-XXXX]|
   |                        |     |        |time server    |          |
   +------------------------+-----+--------+---------------+----------+

                    Table 1: EDHOC Trust Anchor hints

   *  authentication_authority: This parameter hints at which TA to use
      for authentication credentials used in EDHOC.  The positive CBOR
      label (+1) in the EAD item indicates trust anchor to use for
      verifying the authentication credentials from the sender.  The
      negative CBOR label (-1) indicates what trust anchors are
      supported by the sender and SHOULD be used in authentication
      credentials sent to the sender.

   *  attestation_verifier: TODO

   *  time_authority: TODO

2.1.  CDDL Specification

   The following CDDL defines the EAD item for Trust Anchor hints:

ead_ta_hint = (
    ead_label: ta_hint_ead_label,  ; A predefined constant that identifies this particular EAD structure
    ead_value: bstr .cbor ta_hint_map ; The value is a byte string containing CBOR-encoded TA hints
)

ta_hint_map = {
  * int => ta_hints
},

ta_hints = (ta_hint / [2* ta_hint]),
; ta_hints definitions with one required and several optional implementations.

                         Figure 1: CDDL model

   The following ta_hint is REQUIRED to be implemented:

   ; A required TA hint type using 'kid' (Key ID).
   ta_hint //= (ta_hint-type-kid, -24...23 / bstr)

                  Figure 2: Mandatory to implement ta-hint

   Examples of other ta_hints are given in Figure 3.

; An optional TA hint type using 'x5t' (X.509 CA/ICA Certificate SHA-1 thumbprint).
ta_hint //= (ta_hint-type-x5t, COSE_CertHash)
; An optional TA hint type using 'x5u' (X.509 CA/ICA Certificate URL).
ta_hint //= (ta_hint-type-x5u, uri)
; An optional TA hint type using 'c5t' (CBOR CA/ICA Certificate SHA-1 thumbprint).
ta_hint //= (ta_hint-type-c5t, COSE_CertHash)
; An optional TA hint type using 'c5u' (CBOR CA/ICA Certificate URL).
ta_hint //= (ta_hint-type-c5u, uri)
; An optional TA hint type using 'uuid', represented as a binary UUID.
ta_hint //= (ta_hint-type-uuid, buuid)
; Trust type identifiers used to specify the type of trust hint in ta_hint.
;REQUIRED to implement:
; Identifier for 'kid' TA hint type.
ta_hint-type-kid = 1
;OPTIONAL to implement:
; Identifier for 'x5t' TA hint type.
ta_hint-type-x5t = 2
; Identifier for 'x5u' TA hint type.
ta_hint-type-x5u = 3
; Identifier for 'c5t' TA hint type.
ta_hint-type-c5t = 4
; Identifier for 'c5u' TA hint type.
ta_hint-type-c5u = 5
; Identifier for 'uuid' TA hint type.
ta_hint-type-uuid = 6
; Defined in [RFC9360]
COSE_CertHash = [
    hashAlg: (int / tstr),  ; Hash algorithm identifier corresponding to the Value column of the algorithm
registered in the "COSE Algorithms" registry.
    hashValue: bstr         ; The hash value itself as a byte string.
]
; Binary UUID (universally unique identifier) tagged with specific CBOR tag to ensure proper encoding.
buuid = #6.37(bstr)
; The label for the EAD item containing TA hints
ta_hint_ead_label = TBD

                    Figure 3: Examples of ta-hints

3.  Processing

   In EDHOC message_2, where the responder sends its credentials, the
   ead_ta_hint format is used to include trust anchor hints in the EAD_2
   field.  This hint informs the initiator about which trust roots to
   prioritize when verifying the responder's credentials.  For example,
   if the initiator’s trust store contains multiple CA/intermediate CA
   certificates, the responder can include a hint indicating that the
   credentials should be verified using a specific trust root identified
   by kid, x5t, x5u, c5t, c5u or UUID.

   The hint structure is designed as follows:

   *  ead_label: A predefined constant that identifies this EAD
      structure.

   *  ead_value: A byte string containing CBOR map of CBOR encoded trust
      anchor hints (ta_hints).

   ta_hints can contain one or more ta_hint entries, where each entry
   provides a hint on which trust root to use.  The hints can include:

   *  kid: A key identifier for a specific trust root.

   *  x5t: A SHA-1 thumbprint of an X.509 certificate.

   *  x5u: A URL pointing to an X.509 certificate.

   *  c5t: A SHA-1 thumbprint of a CBOR certificate.

   *  c5u: A URL pointing to a CBOR certificate.

   *  aeid: A binary UUID representing an Assa Abloy Entity Identifier

3.1.  Example Scenario

   Consider a scenario where the initiator trusts five CA/intermediate
   certificates.  The responder, when sending message_2, knows that the
   initiator should use the trust root identified by kid=edhoc-noc-ica-2
   for verification.  The responder includes this hint in EAD_2:

   {TBD}, << 1, h'6564686F632D6E6F632D6963612D32' >>

   When the initiator receives message_2, it will prioritize validating
   the responder’s credentials using the trust root associated with the
   provided kid.

   If the validation against the trust anchors specified with the EAD
   item defined in this specification fails or is not recognized, then
   the receiver SHOULD fall back to the default validation process using
   available trust anchors.  If all validation against trust anchors
   fail, then an error SHOULD be sent.

4.  Security Considerations

   TODO Security

5.  IANA Considerations

5.1.  EDHOC External Authorization Data Registry

   IANA is requested to register the following entry to the "EDHOC
   External Authorization Data" registry defined in Section 10.5 of
   [RFC9528].

   The ead_label = TBD and the ead_value define a TA hint transferred in
   an EAD item of an EDHOC message, with processing specified in
   Section TODO.

   Name: Trust Anchor Hint

   Label: TBD (from the unsigned range)

   Description: A hint for determination of Trust Anchors used for
   verifying authentication credentials in EDHOC [RFC9528] or of other
   assertions used with External Authorization Data of EDHOC.

   Reference: [RFC-XXXX]

5.2.  EDHOC Trust Anchor Hint Registry

   IANA has created a new registry entitled "EDHOC Trust Anchor Hint
   Registry".  The registration procedure depends on the range of CBOR
   label values, following [RFC8126].  Guidelines for the experts are
   provided in TODO.

   The columns of the registry are:

   Name: The name indicates the type of authority for which a hint is
   provided.

   CBOR Label: The value to be used to identify this type of authority.
   Map key labels MUST be unique.  The registry contains only positive
   integers, but negative integers MAY be used in the EAD item for the
   same type of authority but with separate semantics.  Integer values
   between 1 and 23 are designated as Standards Track document required.
   Integer values from 24 to 255 are designated as Specification
   Required.  Integer values from 256 to 65535 are designated as Expert
   Review.  Integer values greater than 65535 are marked as Private Use.

   CBOR Type: This field contains the CBOR type for the field.

   Description: This field contains a brief description for the field.

   Reference: This contains a pointer to the public specification for
   the field, if one exists.

   This registry has been initially populated by the values in Table 1.
   The Reference column for all of these entries is this document.

6.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC5905]  Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,
              "Network Time Protocol Version 4: Protocol and Algorithms
              Specification", RFC 5905, DOI 10.17487/RFC5905, June 2010,
              <https://www.rfc-editor.org/rfc/rfc5905>.

   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, "Guidelines for
              Writing an IANA Considerations Section in RFCs", BCP 26,
              RFC 8126, DOI 10.17487/RFC8126, June 2017,
              <https://www.rfc-editor.org/rfc/rfc8126>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9334]  Birkholz, H., Thaler, D., Richardson, M., Smith, N., and
              W. Pan, "Remote ATtestation procedureS (RATS)
              Architecture", RFC 9334, DOI 10.17487/RFC9334, January
              2023, <https://www.rfc-editor.org/rfc/rfc9334>.

   [RFC9528]  Selander, G., Preuß Mattsson, J., and F. Palombini,
              "Ephemeral Diffie-Hellman Over COSE (EDHOC)", RFC 9528,
              DOI 10.17487/RFC9528, March 2024,
              <https://www.rfc-editor.org/rfc/rfc9528>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Marek Serafin
   ASSA ABLOY
   Email: marek.serafin@assaabloy.com


   Göran Selander
   Ericsson
   Email: goran.selander@ericsson.com
